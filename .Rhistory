bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2) +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(aes(reorder(book, bigram), bigram), stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
fct_reorder(bigram) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
fct_reorder(n) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
?factor
?rev
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = unique(bigram))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = sort(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
arrange(desc(tf_idf)) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
arrange(desc(tf_idf)) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_rev(bigram), tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, fct_rev(tf_idf), fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(bigram, y = fct_rev(tf_idf), fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_infreq(bigram), tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_order(bigram), tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_reorder(bigram), tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_reorder(bigram, tf_idf), tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_rev( fct_reorder(bigram, tf_idf)), tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_reorder(bigram, tf_idf), tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_relevel(bigram, tf_idf), tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_reorder(bigram, tf_idf), tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_reorder(bigram, tf_idf), tf_idf, fill = book)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_filtered %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_reorder(bigram, tf_idf), tf_idf, fill = book)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigrams_filtered %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_reorder(bigram, tf_idf), tf_idf, fill = book)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
bigram_united %>%
count(book, bigram) %>%
bind_tf_idf(bigram, book, n) %>%
arrange(desc(tf_idf)) %>%
mutate(bigrams = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_reorder(bigram, tf_idf), tf_idf, fill = book)) +
geom_col(stat = "idendity", show.legend = FALSE) +
labs(x = NULL, y = "tf-idf of bigram to novel") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
head(freq_by_rank)
book_words %>%
arrange(desc(tf_idf)) %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(book) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = fct_reorder(word, tf_idf), tf_idf, fill = book)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~book, ncol = 2, scales = "free") +
coord_flip()
not_word <- bigrams_separated %>%
filter(word1 == "not") %>%
inner_join(AFINN, by = c(word2 = "word")) %>%
count(word2, score, sort = TRUE) %>%
ungroup()
AFINN <- get_sentiments("afinn")
not_word <- bigrams_separated %>%
filter(word1 == "not") %>%
inner_join(AFINN, by = c(word2 = "word")) %>%
count(word2, score, sort = TRUE) %>%
ungroup()
get_sentiments("afinn")
AFINN <- get_sentiments("afinn")
not_word <- bigrams_separated %>%
filter(word1 == "not") %>%
inner_join(AFINN, by = c(word2 = "word")) %>%
count(word2, value, sort = TRUE) %>%
ungroup()
not_word
bigrams_separated %>%
filter(word1 == "not") %>%
count(word1, word2, sort = TRUE)
not_word %>%
mutate(contribution = n * value) %>%
arrange(desc(abs(contribution))) %>%
head(20) %>%
mutate(word2 = reorder(word2, contribution)) %>%
ggplot(aes(word2, n*value, fill = n * value > 0)) +
geom_col(show.legend = FALSE) +
xlab("Words preceded by \"not\"") +
ylab("Afinn sentiment score * number of occurences") +
coord_flip()
install.packages("igraph")
library(igraph)
bigram_counts
bigram_network_graph <- bigram_counts %>%
filter(n > 15) %>%
graph_from_data_frame()
bigram_network_graph
install.packages("ggraph")
library(ggraph)
set.seed(486)
ggraph(bigram_network_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_network_graph <- bigram_counts %>%
filter(n > 10) %>%
graph_from_data_frame()
bigram_network_graph
set.seed(486)
ggraph(bigram_network_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
set.seed(486)
a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
ggraph(bigram_network_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, "inches")) +
geom_node_point(color = "navy", size = 3) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
set.seed(486)
a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
ggraph(bigram_network_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, "inches")) +
geom_node_point(color = "lightblue", size = 3) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
set.seed(486)
a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
ggraph(bigram_network_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, "inches")) +
geom_node_point(color = "lightblue", size = 2) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
set.seed(486)
a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
ggraph(bigram_network_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.05, "inches")) +
geom_node_point(color = "lightblue", size = 2) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
set.seed(486)
a <- grid::arrow(type = "closed", length = unit(.07, "inches"))
ggraph(bigram_network_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.05, "inches")) +
geom_node_point(color = "lightblue", size = 2) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
bigram_network_graph <- bigram_counts %>%
filter(n > 5) %>%
graph_from_data_frame()
bigram_network_graph
set.seed(486)
a <- grid::arrow(type = "closed", length = unit(.07, "inches"))
ggraph(bigram_network_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.05, "inches")) +
geom_node_point(color = "lightblue", size = 2) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
bigram_network_graph <- bigram_counts %>%
filter(n > 10) %>%
graph_from_data_frame()
bigram_network_graph
set.seed(486)
a <- grid::arrow(type = "closed", length = unit(.07, "inches"))
ggraph(bigram_network_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.05, "inches")) +
geom_node_point(color = "lightblue", size = 2) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
