"0","# emotion_by will scan each line, count the words in the line and return an emotion count for each emotion it detects (anger, anticipation, disgust, fear, joy, sadness, surprise, and trust. It will also identify any negation to those emotions.)"
"0",""
"0","amber_emotions <- amber_books$text %>%"
"0","  get_sentences() %>%"
"0","  emotion_by(drop.unused.emotions = TRUE) %>%"
"0","  group_by(emotion_type) %>%"
"0","  summarise(ave_emotion = mean(ave_emotion)) %>%"
"0","  mutate(emotion_type = reorder(emotion_type, ave_emotion)) "
"0","amber_emotions$book <- ""Chronicles of Amber"""
"0",""
"0","nineprinces_emotions <- nine_princes$text %>%"
"0","  get_sentences() %>%"
"0","  emotion_by(drop.unused.emotions = TRUE) %>%"
"0","  group_by(emotion_type) %>%"
"0","  summarise(ave_emotion = mean(ave_emotion)) %>%"
"0","  mutate(emotion_type = reorder(emotion_type, ave_emotion))"
"0","nineprinces_emotions$book <- ""Nine Princes in Amber"""
"0",""
"0","gunsavalon_emotions <- guns_avalon$text %>%"
"0","  get_sentences() %>%"
"0","  emotion_by(drop.unused.emotions = TRUE) %>%"
"0","  group_by(emotion_type) %>%"
"0","  summarise(ave_emotion = mean(ave_emotion)) %>%"
"0","  mutate(emotion_type = reorder(emotion_type, ave_emotion))"
"0","gunsavalon_emotions$book <- ""The Guns of Avalon"""
"0",""
"0","signunicorn_emotions <- sign_unicorn$text %>%"
"0","  get_sentences() %>%"
"0","  emotion_by(drop.unused.emotions = TRUE) %>%"
"0","  group_by(emotion_type) %>%"
"0","  summarise(ave_emotion = mean(ave_emotion)) %>%"
"0","  mutate(emotion_type = reorder(emotion_type, ave_emotion))"
"0","signunicorn_emotions$book <- ""Sign of the Unicorn"""
"0",""
"0","handoberon_emotions <- hand_oberon$text %>%"
"0","  get_sentences() %>%"
"0","  emotion_by(drop.unused.emotions = TRUE) %>%"
"0","  group_by(emotion_type) %>%"
"0","  summarise(ave_emotion = mean(ave_emotion)) %>%"
"0","  mutate(emotion_type = reorder(emotion_type, ave_emotion))"
"0","handoberon_emotions$book <- ""The Hand of Oberon"""
"0",""
"0","courtschaos_emotions <- courts_chaos$text %>%"
"0","  get_sentences() %>%"
"0","  emotion_by(drop.unused.emotions = TRUE) %>%"
"0","  group_by(emotion_type) %>%"
"0","  summarise(ave_emotion = mean(ave_emotion)) %>%"
"0","  mutate(emotion_type = reorder(emotion_type, ave_emotion))"
"0","courtschaos_emotions$book <- ""The Courts of Chaos"""
"0",""
"0","trumpsdoom_emotions <- trumps_doom$text %>%"
"0","  get_sentences() %>%"
"0","  emotion_by(drop.unused.emotions = TRUE) %>%"
"0","  group_by(emotion_type) %>%"
"0","  summarise(ave_emotion = mean(ave_emotion)) %>%"
"0","  mutate(emotion_type = reorder(emotion_type, ave_emotion))"
"0","trumpsdoom_emotions$book <- ""The Trumps of Doom"""
"0",""
"0","bloodamber_emotions <- blood_amber$text %>%"
"0","  get_sentences() %>%"
"0","  emotion_by(drop.unused.emotions = TRUE) %>%"
"0","  group_by(emotion_type) %>%"
"0","  summarise(ave_emotion = mean(ave_emotion)) %>%"
"0","  mutate(emotion_type = reorder(emotion_type, ave_emotion))"
"0","bloodamber_emotions$book <- ""Blood of Amber"""
"0",""
"0","signchaos_emotions <- sign_chaos$text %>%"
"0","  get_sentences() %>%"
"0","  emotion_by(drop.unused.emotions = TRUE) %>%"
"0","  group_by(emotion_type) %>%"
"0","  summarise(ave_emotion = mean(ave_emotion)) %>%"
"0","  mutate(emotion_type = reorder(emotion_type, ave_emotion))"
"0","signchaos_emotions$book <- ""Sign of Chaos"""
"0",""
"0","knightshadows_emotions <- knight_shadows$text %>%"
"0","  get_sentences() %>%"
"0","  emotion_by(drop.unused.emotions = TRUE) %>%"
"0","  group_by(emotion_type) %>%"
"0","  summarise(ave_emotion = mean(ave_emotion)) %>%"
"0","  mutate(emotion_type = reorder(emotion_type, ave_emotion))"
"0","knightshadows_emotions$book <- ""Knight of Shadows"""
"0",""
"0","princechaos_emotions <- prince_chaos$text %>%"
"0","  get_sentences() %>%"
"0","  emotion_by(drop.unused.emotions = TRUE) %>%"
"0","  group_by(emotion_type) %>%"
"0","  summarise(ave_emotion = mean(ave_emotion)) %>%"
"0","  mutate(emotion_type = reorder(emotion_type, ave_emotion))"
"0","princechaos_emotions$book <- ""Prince of Chaos"""
"0",""
"0",""
"0","emotions_bind <- rbind(amber_emotions, nineprinces_emotions, gunsavalon_emotions, signunicorn_emotions, handoberon_emotions, courtschaos_emotions, trumpsdoom_emotions, bloodamber_emotions, signchaos_emotions, knightshadows_emotions, princechaos_emotions)"
